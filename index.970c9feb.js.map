{"mappings":"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","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/transform.js","node_modules/ol/src/has.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/GeoJSON.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/control/ZoomToExtent.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/hashed/lib/main.js","node_modules/hashed/lib/store.js","node_modules/hashed/lib/schema.js","node_modules/hashed/lib/util.js","node_modules/ol/src/interaction/DragAndDrop.js","node_modules/isa.js/IsA.js","node_modules/hashed/lib/serializers.js","node_modules/hashed/lib/deserializers.js","node_modules/hashed/lib/field.js","node_modules/hashed/lib/hash.js","node_modules/ol-hashed/index.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/control/MousePosition.js","main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","const Store = require('./store').Store;\nconst hash = require('./hash');\n\nlet store;\n\nfunction reset() {\n  if (store) {\n    window.removeEventListener('popstate', update);\n  }\n  window.addEventListener('popstate', update);\n  store = new Store(hash.deserialize(location.hash), function(\n    values,\n    defaults\n  ) {\n    const nonDefaults = {};\n    for (const key in values) {\n      if (values[key] !== defaults[key]) {\n        nonDefaults[key] = values[key];\n      }\n    }\n    history.pushState(values, '', hash.serialize(nonDefaults));\n  });\n}\n\nfunction update() {\n  store.update(hash.deserialize(location.hash));\n}\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called immediately with initial state.\n * @return {function(Object)} Call this function with any updates to the state.\n */\nexports.register = function(config, callback) {\n  return store.register(config, callback);\n};\n\n/**\n * Unregister an existing state provider.\n * @param {function(Object)} callback Callback registered by the provider.\n */\nexports.unregister = function(callback) {\n  store.unregister(callback);\n};\n\n/**\n * Serialize values as they would be represented in the hash.\n * @param {Object} values An object with values to be serialized.\n * @return {string} The values as they would be represented in the hash.\n */\nexports.serialize = function(values) {\n  return hash.serialize(store.serialize(values));\n};\n\nexports.reset = reset;\n\nreset();\n","const Schema = require('./schema').Schema;\nconst util = require('./util');\nconst serializers = require('./serializers');\n\n/**\n * An object backed store of string values.  Allows registering multiple state\n * providers.\n * @param {Object} values Initial serialized values.\n * @param {function(Object)} callback Called with an object of serialized\n *     values and defaults whenever a provider updates state.\n * @constructor\n */\nconst Store = (exports.Store = function(values, callback) {\n  this._values = values;\n  this._defaults = {};\n  this._providers = [];\n  this._callback = callback;\n  this._callbackTimer = null;\n});\n\nStore.prototype._scheduleCallback = function() {\n  if (this._callbackTimer) {\n    clearTimeout(this._callbackTimer);\n  }\n  this._callbackTimer = setTimeout(this._debouncedCallback.bind(this));\n};\n\nStore.prototype._debouncedCallback = function() {\n  this._callbackTimer = null;\n  this._callback(this._values, this._defaults);\n};\n\nStore.prototype.update = function(values) {\n  if (this._updateTimer) {\n    clearTimeout(this._updateTimer);\n  }\n  this._updateTimer = setTimeout(this._debouncedUpdate.bind(this, values));\n};\n\nStore.prototype._debouncedUpdate = function(newValues) {\n  this._updateTimer = null;\n  const values = this._values;\n  const providers = this._providers.slice(); // callbacks may unregister providers\n  for (let i = providers.length - 1; i >= 0; --i) {\n    const provider = providers[i];\n    const schema = provider.schema;\n    let changed = false;\n    const state = {};\n    schema.forEachKey(function(key, prefixed) {\n      let deserialized;\n      if (!(prefixed in newValues)) {\n        deserialized = schema.getDefault(key);\n        const serializedDefault = schema.serialize(key, deserialized);\n        if (values[prefixed] !== serializedDefault) {\n          changed = true;\n          values[prefixed] = serializedDefault;\n          state[key] = deserialized;\n        }\n      } else if (values[prefixed] !== newValues[prefixed]) {\n        try {\n          deserialized = schema.deserialize(key, newValues[prefixed]);\n          values[prefixed] = newValues[prefixed];\n          state[key] = deserialized;\n          changed = true;\n        } catch (err) {\n          // invalid value, pass\n        }\n      }\n    });\n    if (changed && this._providers.indexOf(provider) >= 0) {\n      provider.callback(state);\n    }\n  }\n};\n\n/**\n * Unregister a provider.  Deletes the provider's values from the underlying\n * store and calls the store's callback.\n * @param {Function} callback The provider's callback.\n */\nStore.prototype.unregister = function(callback) {\n  let removedProvider;\n  this._providers = this._providers.filter(function(provider) {\n    const remove = provider.callback === callback;\n    if (remove) {\n      removedProvider = provider;\n    }\n    return !remove;\n  });\n  if (!removedProvider) {\n    throw new Error('Unable to unregister hashed state provider');\n  }\n  const values = this._values;\n  const defaults = this._defaults;\n  removedProvider.schema.forEachKey(function(key, prefixed) {\n    delete values[prefixed];\n    delete defaults[prefixed];\n  });\n  this._scheduleCallback();\n};\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called by the store on state changes.\n * @return {function(Object)} Called by the provider on state changes.\n */\nStore.prototype.register = function(config, callback) {\n  const provider = {\n    schema: new Schema(config),\n    callback: callback\n  };\n\n  // ensure there are no conflicts with existing providers\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const conflicts = provider.schema.conflicts(this._providers[i].schema);\n    if (conflicts) {\n      throw new Error(\n        'Provider already registered using the same name: ' + conflicts\n      );\n    }\n    if (provider.callback === this._providers[i].callback) {\n      throw new Error('Provider already registered with the same callback');\n    }\n  }\n\n  this._providers.push(provider);\n  this._initializeProvider(provider);\n\n  return function update(state) {\n    if (this._providers.indexOf(provider) === -1) {\n      throw new Error('Unregistered provider attempting to update state');\n    }\n    const schema = provider.schema;\n    let changed = false;\n    const values = this._values;\n    schema.forEachKey(function(key, prefixed) {\n      if (key in state) {\n        const serializedValue = schema.serialize(key, state[key], state);\n        if (values[prefixed] !== serializedValue) {\n          changed = true;\n          values[prefixed] = serializedValue;\n        }\n      }\n    });\n    if (changed) {\n      this._scheduleCallback();\n    }\n  }.bind(this);\n};\n\n/**\n * Call provider with initial values.\n * @param {Object} provider Provider to be initialized.\n */\nStore.prototype._initializeProvider = function(provider) {\n  const state = {};\n  const defaults = {};\n  const values = this._values;\n  provider.schema.forEachKey(function(key, prefixed) {\n    let deserializedValue;\n    const deserializedDefault = provider.schema.getDefault(key);\n    const serializedDefault = provider.schema.serialize(\n      key,\n      deserializedDefault\n    );\n    if (prefixed in values) {\n      try {\n        deserializedValue = provider.schema.deserialize(key, values[prefixed]);\n      } catch (err) {\n        deserializedValue = deserializedDefault;\n      }\n    } else {\n      deserializedValue = deserializedDefault;\n    }\n    state[key] = deserializedValue;\n    defaults[prefixed] = serializedDefault;\n    values[prefixed] = provider.schema.serialize(key, deserializedValue);\n  });\n  for (const prefixed in defaults) {\n    this._defaults[prefixed] = defaults[prefixed];\n  }\n  provider.callback(state);\n};\n\n/**\n * Serialize values with provider serializers where available.\n * @param {Object} values Values to be serialized.\n * @return {Object} The serialized values.\n */\nStore.prototype.serialize = function(values) {\n  const serialized = {};\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const provider = this._providers[i];\n    provider.schema.forEachKey(function(key, prefixed) {\n      if (prefixed in values) {\n        serialized[prefixed] = provider.schema.serialize(\n          key,\n          values[prefixed],\n          values\n        );\n      }\n    });\n  }\n  for (const key in values) {\n    if (!(key in serialized)) {\n      const value = values[key];\n      const type = util.typeOf(value);\n      const serializer = serializers.get(type);\n      serialized[key] = serializer(value);\n    }\n  }\n  return serialized;\n};\n","const Field = require('./field').Field;\nconst util = require('./util');\n\n/**\n * Create a new schema.  A schema is a collection of field definitions.\n * @param {Object} config Keys are field names, values are field configs.\n * @constructor\n */\nconst Schema = (exports.Schema = function(config) {\n  config = util.extend({}, config);\n  const fields = {};\n  let prefix;\n  if ('_' in config) {\n    prefix = config._;\n    delete config._;\n  }\n  for (const key in config) {\n    fields[key] = new Field(config[key]);\n  }\n  this._prefix = prefix;\n  this._fields = fields;\n});\n\n/**\n * Get the prefixed version of a key.\n * @param {string} key The key.\n * @return {string} The prefixed key.\n */\nSchema.prototype.getPrefixed = function(key) {\n  return this._prefix ? this._prefix + '.' + key : key;\n};\n\n/**\n * Call a callback for each field key.\n * @param {function(string, number)} callback Called with a local field key and\n *     a prefixed key.\n * @param {Object} thisArg This argument for the callback.\n */\nSchema.prototype.forEachKey = function(callback, thisArg) {\n  let more;\n  for (const key in this._fields) {\n    more = callback.call(thisArg, key, this.getPrefixed(key));\n    if (more === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Serialize a value.\n * @param {string} key The key or field name.\n * @param {*} value The value to serialize.\n * @param {Object} values Additional values for providers to use when serializing.\n * @return {string} The serialized value.\n */\nSchema.prototype.serialize = function(key, value, values) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].serialize(value, values);\n};\n\n/**\n * Deserialize a value.\n * @param {string} key The key or field name.\n * @param {string} str The serialized value.\n * @return {*} The deserialized value.\n */\nSchema.prototype.deserialize = function(key, str) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].deserialize(str);\n};\n\n/**\n * Get the default value for a particular field.\n * @param {string} key The key or field name.\n * @return {*} The default value.\n */\nSchema.prototype.getDefault = function(key) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].default;\n};\n\n/**\n * Determine if one schema conflicts with another.  Two schemas conflict if\n * any of their prefixed keys are the same.\n * @param {Schema} other The other schema.\n * @return {boolean|string} This schema conflicts with the other.  If the two\n *     schemas conflict, the return will be the first conflicting key (with\n *     any prefix).\n */\nSchema.prototype.conflicts = function(other) {\n  const thisPrefixedKeys = {};\n  for (const key in this._fields) {\n    thisPrefixedKeys[this.getPrefixed(key)] = true;\n  }\n\n  let conflicts = false;\n  other.forEachKey(function(_, prefixed) {\n    if (prefixed in thisPrefixedKeys) {\n      conflicts = prefixed;\n    }\n    return !conflicts;\n  });\n  return conflicts;\n};\n","const isa = require('isa.js');\n\n/**\n * Get the type of a value.\n * @param {*} value The value.\n * @return {string} The type.\n */\nexports.typeOf = function typeOf(value) {\n  let type = typeof value;\n  if (type === 'object') {\n    if (value === null) {\n      type = 'null';\n    } else if (isa.isArray(value)) {\n      type = 'array';\n    } else if (isa.isDate(value)) {\n      type = 'date';\n    } else if (isa.isRegExp(value)) {\n      type = 'regexp';\n    } else if (isa.isError(value)) {\n      type = 'error';\n    }\n  }\n  return type;\n};\n\n/**\n * Copy properties from one object to another.\n * @param {Object} dest The destination object.\n * @param {Object} source The source object.\n * @return {Object} The destination object.\n */\nexports.extend = function(dest, source) {\n  for (const key in source) {\n    dest[key] = source[key];\n  }\n  return dest;\n};\n\n/**\n * Generate an array of alternating name, value from an object's properties.\n * @param {Object} object The object to zip.\n * @return {Array} The array of name, value [, name, value]*.\n */\nexports.zip = function(object) {\n  const zipped = [];\n  let count = 0;\n  for (const key in object) {\n    zipped[2 * count] = key;\n    zipped[2 * count + 1] = object[key];\n    ++count;\n  }\n  return zipped;\n};\n\n/**\n * Generate an object from an array of alternating name, value items.\n * @param {Array} array The array of name, value [, name, value]*.\n * @return {Object} The zipped up object.\n */\nexports.unzip = function(array) {\n  const object = {};\n  for (let i = 0, ii = array.length; i < ii; i += 2) {\n    object[array[i]] = array[i + 1];\n  }\n  return object;\n};\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport FormatType from '../format/FormatType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [opt_features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combinnation of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === FormatType.ARRAY_BUFFER;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== FormatType.ARRAY_BUFFER) {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","var boolTag = '[object Boolean]',\n\tdateTag = '[object Date]',\n\terrorTag = '[object Error]',\n\tfuncTag = '[object Function]',\n\tafuncTag = '[object AsyncFunction]',\n\tnumberTag = '[object Number]',\n\tobjectTag = '[object Object]',\n\tregexpTag = '[object RegExp]',\n\tstringTag = '[object String]'\n\nvar objectProto = Object.prototype\n\nvar objToString = objectProto.toString\nvar fnToString = Function.prototype.toString\nvar objCtorString = fnToString.call(Object)\n\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg\nvar ARGUMENT_NAMES = /([^\\s,]+)/g\n\nvar NAME_PATTERN = /([\\\\.A-Za-z]+)/g\n\nlet Services = {\n\tgetPrototypeOf: Object.getPrototypeOf,\n\tisHostObject: function (value) {\n\t\tvar result = false\n\t\tif (value !== null && typeof value.toString !== 'function') {\n\t\t\ttry {\n\t\t\t\tresult = !!(value + '')\n\t\t\t} catch (e) {}\n\t\t}\n\t\treturn result\n\t},\n\tisDefined (value) {\n\t\treturn value !== undefined && value !== null\n\t},\n\tisIterable (obj) {\n\t\tif ( !Services.isDefined(obj) )\n\t\t\treturn false\n\n\t\treturn typeof obj[Symbol.iterator] === 'function'\n\t},\n\tisPromise (p) {\n\t\treturn p && Object.prototype.toString.call(p) === '[object Promise]'\n\t},\n\tisPlainObject: function (value) {\n\t\tif (!this.isObjectLike(value) || objToString.call(value) !== objectTag || this.isHostObject(value)) {\n\t\t\treturn false\n\t\t}\n\t\tvar proto = typeof value.constructor === 'function' ? this.getPrototypeOf(value) : objectProto\n\n\t\tif (proto === null) {\n\t\t\treturn true\n\t\t}\n\t\tvar Ctor = proto.constructor\n\t\treturn (typeof Ctor === 'function' && Ctor instanceof Ctor && fnToString.call(Ctor) === objCtorString)\n\t},\n\tisObjectLike: function (value) {\n\t\treturn !!value && typeof value === 'object'\n\t},\n\tisArray: Array.isArray,\n\tisObject: function (value) {\n\t\tvar type = typeof value\n\t\treturn !!value && (type === 'object' || type === 'function')\n\t},\n\tisError: function (value) {\n\t\treturn this.isObjectLike(value) && typeof value.message === 'string' && objToString.call(value) === errorTag\n\t},\n\tisNumber: function (value) {\n\t\treturn typeof value === 'number' || (this.isObjectLike(value) && objToString.call(value) === numberTag)\n\t},\n\tisDate: function (value) {\n\t\treturn this.isObjectLike(value) && objToString.call(value) === dateTag\n\t},\n\tisFunction: function (value) {\n\t\treturn this.isObject(value) && (objToString.call(value) === funcTag || objToString.call(value) === afuncTag)\n\t},\n\tisSyncFunction: function (value) {\n\t\treturn this.isObject(value) && objToString.call(value) === funcTag\n\t},\n\tisAsyncFunction: function (value) {\n\t\treturn this.isObject(value) && objToString.call(value) === afuncTag\n\t},\n\tisBoolean: function (value) {\n\t\treturn value === true || value === false || (this.isObjectLike(value) && objToString.call(value) === boolTag)\n\t},\n\tisString: function (value) {\n\t\treturn typeof value === 'string' || ( this.isObjectLike(value) && objToString.call(value) === stringTag)\n\t},\n\tisRegExp: function (value) {\n\t\treturn this.isObject(value) && objToString.call(value) === regexpTag\n\t},\n\twalk: function (object, path, defaultValue) {\n\t\tif ( !path ) return defaultValue\n\n\t\tlet oPath = Array.isArray(path) ? path : path.split('.')\n\n\t\tif ( !object && oPath.length === 0 ) return true\n\t\tfor ( let key of oPath ) {\n\t\t\tif ( !object || !object[key] ) return defaultValue\n\t\t\tobject = object[ key ]\n\t\t}\n\t\treturn object || defaultValue\n\t},\n\tisValidPath: function (object, path) {\n\t\treturn !!Services.walk(object, path, null)\n\t},\n\tparameterNames: function ( func ) {\n\t\tvar fnStr = func.toString().replace(STRIP_COMMENTS, '')\n\t\tvar result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES)\n\t\tif (result === null)\n\t\t\tresult = []\n\t\tresult = result.map( ( p ) => {\n\t\t\tvar index = p.indexOf('=')\n\t\t\treturn (index === -1) ? p : p.substring( 0, index )\n\t\t} )\n\t\tresult = result.filter( ( p ) => {\n\t\t\treturn p.length > 0 && p.match( NAME_PATTERN )\n\t\t} )\n\t\treturn result\n\t},\n\tpick: function (object, predicate, ignore, target ) {\n\t\tif (!object)\n\t\t\treturn {}\n\n\t\tif (!predicate)\n\t\t\tpredicate = Object.keys( object )\n\t\telse if (!Array.isArray(predicate))\n\t\t\tpredicate = Object.keys( predicate )\n\n\t\tif (!ignore)\n\t\t\tignore = []\n\t\telse if (!Array.isArray(ignore))\n\t\t\tignore = Object.keys( ignore )\n\n\t\tlet res = target || {}\n\t\tfor (let key of predicate)\n\t\t\tif (!ignore.includes(key) && object.hasOwnProperty(key) )\n\t\t\t\tres[ key ] = object[key]\n\t\treturn res\n\t},\n\tfunctionsOf (obj, asyncOnly = false) {\n\t\tlet res = []\n\t\tif (!obj) return res\n\n\t\tfor (let m in obj)\n\t\t\tif ( obj[m] && ( asyncOnly ? this.isAsyncFunction( obj[m] ) : this.isFunction( obj[m] ) ) )\n\t\t\t\tres.push( obj[m] )\n\t\treturn res\n\t},\n\tfunctionNames (obj, asyncOnly = false) {\n\t\tlet res = []\n\t\tif (!obj) return res\n\n\t\tfor (let m in obj)\n\t\t\tif ( obj[m] && (asyncOnly ? this.isAsyncFunction( obj[m] ) : this.isFunction( obj[m] ) ) )\n\t\t\t\tres.push( m )\n\t\treturn res\n\t}\n\n}\n\nmodule.exports = Services\n","const isa = require('isa.js');\n\nconst enc = encodeURIComponent;\n\nconst serializers = {\n  string: function(str) {\n    if (typeof str !== 'string') {\n      throw new Error('Expected string to serialize: ' + str);\n    }\n    return enc(str);\n  },\n  number: function(num) {\n    if (typeof num !== 'number') {\n      throw new Error('Expected number to serialize: ' + num);\n    }\n    return enc(String(num));\n  },\n  boolean: function(bool) {\n    if (typeof bool !== 'boolean') {\n      throw new Error('Expected boolean to serialize: ' + bool);\n    }\n    return bool ? '1' : '0';\n  },\n  date: function(date) {\n    if (!isa.isDate(date)) {\n      throw new Error('Expected date to serialize: ' + date);\n    }\n    return enc(date.toISOString());\n  },\n  array: function(array) {\n    if (!isa.isArray(array)) {\n      throw new Error('Expected array to serialize: ' + array);\n    }\n    return enc(JSON.stringify(array));\n  },\n  object: function(obj) {\n    return enc(JSON.stringify(obj));\n  }\n};\n\n/**\n * Get a serializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(*): string} Function that serializes a value to a string.\n */\nexports.get = function(type) {\n  if (!(type in serializers)) {\n    throw new Error('Unable to serialize type: ' + type);\n  }\n  return serializers[type];\n};\n","const util = require('./util');\n\nconst dec = decodeURIComponent;\n\nconst noop = function() {};\n\nconst deserializers = {\n  string: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    return dec(str);\n  },\n  number: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const num = Number(dec(str));\n    if (isNaN(num)) {\n      throw new Error('Expected to deserialize a number: ' + str);\n    }\n    return num;\n  },\n  boolean: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let bool;\n    if (str === '1') {\n      bool = true;\n    } else if (str === '0') {\n      bool = false;\n    } else {\n      throw new Error('Expected \"1\" or \"0\" for boolean: ' + str);\n    }\n    return bool;\n  },\n  date: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const date = new Date(dec(str));\n    if (isNaN(date.getTime())) {\n      throw new Error('Expected to deserialize a date: ' + str);\n    }\n    return date;\n  },\n  array: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let array;\n    try {\n      array = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!array || util.typeOf(array) !== 'array') {\n      throw new Error('Expected to deserialize an array: ' + str);\n    }\n    return array;\n  },\n  object: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let obj;\n    try {\n      obj = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!obj || util.typeOf(obj) !== 'object') {\n      throw new Error('Expected to deserialize an object: ' + str);\n    }\n    return obj;\n  }\n};\n\n/**\n * Get a deserializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(string): *} Function that deserializes a string to a value.\n */\nexports.get = function(type) {\n  if (!(type in deserializers)) {\n    throw new Error('Unable to deserialize type: ' + type);\n  }\n  return deserializers[type];\n};\n","const util = require('./util');\n\nconst serializers = require('./serializers');\nconst deserializers = require('./deserializers');\n\n/**\n * Create a new field.  A field must have a default value (`default`) and is\n * capable of serializing and deserializing values.\n * @param {Object} config Field configuration.  Must have a `default` property\n *     with a default value.  May have optional `serialize` and `deserialize`\n *     functions.  As a shorthand for providing a config object with a `default`\n *     property, a default value may be provided directly.\n * @constructor\n */\nexports.Field = function(config) {\n  if (util.typeOf(config) !== 'object') {\n    this.default = config;\n  } else if (!('default' in config)) {\n    throw new Error('Missing default');\n  } else {\n    this.default = config.default;\n  }\n\n  const type = util.typeOf(this.default);\n  this.serialize = config.serialize || serializers.get(type);\n  this.deserialize = config.deserialize || deserializers.get(type);\n};\n","const util = require('./util');\n\n/**\n * Get values from a hash string.\n * @param {string} hash The hash string (e.g. '#/foo/bar').\n * @return {Object} The string values (e.g. {foo: 'bar'}).\n */\nfunction deserialize(hash) {\n  let zipped;\n  if (hash.length > 2) {\n    const path = hash.substring(2);\n    zipped = path.split('/');\n  } else {\n    zipped = [];\n  }\n  return util.unzip(zipped);\n}\n\n/**\n * Serialize values for the hash.\n * @param {Object} values The values to serialize.\n * @return {string} The hash string.\n */\nfunction serialize(values) {\n  let path = '#';\n  const parts = util.zip(values);\n  if (parts.length > 0) {\n    path = '#/' + parts.join('/');\n  }\n  return path;\n}\n\nexports.deserialize = deserialize;\nexports.serialize = serialize;\n","import hashed from 'hashed';\nimport {transform} from 'ol/proj';\n\nfunction toPrecision(value, precision) {\n  const factor = Math.pow(10, precision);\n  return (Math.round(value * factor) / factor).toString();\n}\n\nfunction synchronize(map, options) {\n  options = options || {};\n  let animate;\n  if ('animate' in options) {\n    animate = options.animate;\n  } else {\n    animate = {duration: 250};\n  }\n\n  const view = map.getView();\n  const projection = view.getProjection().getCode();\n\n  let zoom, center, rotation;\n  if (view.isDef()) {\n    zoom = view.getZoom();\n    center = view.getCenter();\n    rotation = view.getRotation();\n  } else {\n    const viewport = map.getViewport();\n    if (viewport) {\n      zoom = Math.LOG2E * Math.log(viewport.clientWidth / 256);\n    } else {\n      zoom = 0;\n    }\n    center = [0, 0];\n    rotation = 0;\n  }\n\n  const config = {\n    center: {\n      default: center,\n      serialize: function(coord, state) {\n        let precision;\n        if (state && 'zoom' in state) {\n          precision = Math.max(0, Math.ceil(Math.log(state.zoom) / Math.LN2));\n        } else {\n          precision = 3;\n        }\n        coord = transform(coord, projection, 'EPSG:4326');\n        return (\n          toPrecision(coord[0], precision) +\n          ',' +\n          toPrecision(coord[1], precision)\n        );\n      },\n      deserialize: function(str) {\n        const parts = str.split(',');\n        if (parts.length !== 2) {\n          throw new Error('Expected lon,lat but got ' + str);\n        }\n        const coord = [parseFloat(parts[0]), parseFloat(parts[1])];\n        return transform(coord, 'EPSG:4326', projection);\n      }\n    },\n    zoom: {\n      default: zoom,\n      serialize: function(value) {\n        return toPrecision(value, 1);\n      },\n      deserialize: Number\n    },\n    rotation: {\n      default: rotation,\n      serialize: function(value) {\n        return toPrecision(value, 2);\n      },\n      deserialize: Number\n    }\n  };\n\n  function hashHandler(state) {\n    if (view.isDef() && animate) {\n      view.animate(Object.assign({}, state, animate));\n      return;\n    }\n    if ('center' in state) {\n      view.setCenter(state.center);\n    }\n    if ('zoom' in state) {\n      view.setZoom(state.zoom);\n    }\n    if ('rotation' in state) {\n      view.setRotation(state.rotation);\n    }\n  }\n\n  const update = hashed.register(config, hashHandler);\n\n  function onMoveEnd() {\n    update({\n      center: view.getCenter(),\n      zoom: view.getZoom(),\n      rotation: view.getRotation()\n    });\n  }\n\n  map.on('moveend', onMoveEnd);\n\n  return function unregister() {\n    map.un('moveend', onMoveEnd);\n    hashed.unregister(hashHandler);\n  };\n}\n\nexport default synchronize;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string|boolean} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space\n * is rendered when the mouse leaves the viewport.  To render something else, provide a string\n * to be used as the text content (e.g. 'no position' or '' for an empty string).  Set the placeholder\n * to `false` to retain the last position when the mouse leaves the viewport.  In a future release, this\n * will be the default behavior.\n * @property {string} [undefinedHTML='&#160;'] This option is deprecated.  Use the `placeholder` option instead.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * Change this to `false` when removing the deprecated `undefinedHTML` option.\n     * @type {boolean}\n     */\n    let renderOnMouseOut = true;\n\n    /**\n     * @type {string}\n     */\n    let placeholder = '&#160;';\n\n    if ('undefinedHTML' in options) {\n      // deprecated behavior\n      if (options.undefinedHTML !== undefined) {\n        placeholder = options.undefinedHTML;\n      }\n      renderOnMouseOut = !!placeholder;\n    } else if ('placeholder' in options) {\n      if (options.placeholder === false) {\n        renderOnMouseOut = false;\n      } else {\n        placeholder = String(options.placeholder);\n      }\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = placeholder;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = renderOnMouseOut;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","import GeoJSON from 'ol/format/GeoJSON';\nimport Map from 'ol/Map';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport DragAndDrop from 'ol/interaction/DragAndDrop';\nimport sync from 'ol-hashed';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport {Style, Fill, Stroke} from 'ol/style';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from 'ol/style';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport {circular} from 'ol/geom/Polygon';\nimport {fromLonLat} from 'ol/proj';\nimport Control from 'ol/control/Control';\nimport {ZoomToExtent, defaults as defaultControls} from 'ol/control';\nimport MousePosition from 'ol/control/MousePosition';\nimport {createStringXY} from 'ol/coordinate';\nimport { labelCache } from 'ol/render/canvas';\n\n\nconst mousePositionControl = new MousePosition({\n  coordinateFormat: createStringXY(4),\n  projection: 'EPSG:3857',\n  // comment the following two lines to have the mouse position\n  // be placed within the map.\n  className: 'custom-mouse-position',\n  target: document.getElementById('mouse-position'),\n\n});\n\n\n\nconst zeltplaetzeStyle = new CircleStyle({\n  radius: 5,\n  fill: new Fill({ color: 'white'}),\n  stroke: new Stroke({color: 'black', width: 2}),\n});\n\nconst supermarktStyle = new CircleStyle({\n  radius: 5,\n  fill: new Fill({ color: 'red'}),\n  stroke: new Stroke({color: 'black', width: 2}),\n});\n\nconst baeckerStyle = new CircleStyle({\n  radius: 5,\n  fill: new Fill({ color: 'orange'}),\n  stroke: new Stroke({color: 'black', width: 2}),\n});\nconst routeStyle = new Style ({\n  stroke: new Stroke({\n    color: 'black',\n    width: 4,\n  }),\n})\n\n\n\nconst map = new Map({\n  target: 'map-container',\n\n\n\n  controls: defaultControls().extend([mousePositionControl,\n    new ZoomToExtent({\n      extent: [\n        785195.0136 , 6560234.5747 ,\n        877545.9838 , 6683103.5763\n      ],\n      className:'Tag1',\n      label:'1'\n      }),  \n      new ZoomToExtent({\n        extent: [\n        866575.8137,  6675546.9273,\n        977882.7383,  6791269.6796\n      ],\n      className:'Tag2',\n      label:'2'   \n    }),\n    new ZoomToExtent({\n      extent: [\n        975248.0143,  6787858.9786,\n        1099697.9325, 6884029.4896\n    ],\n    className:'Tag3',\n    label:'3'\n    }),\n    new ZoomToExtent({\n      extent: [\n        1090930.1618, 6846690.7229,\n        939361.1667,  7028162.5925\n    ],\n    className:'Tag4',\n    label:'4'\n    }),\n    new ZoomToExtent({\n      extent: [\n        962712.8673,  6979188.8870,\n        1143833.1248, 7116713.6817\n\n    ],\n    className:'Tag5',\n    label:'5'\n    }), \n    new ZoomToExtent({\n      extent: [\n        1086162.1211, 7061765.9149,\n        1149516.3230, 7113169.2186\n    ],\n    className:'Tag6',\n    label:'6'\n    }),  \n    new ZoomToExtent({\n      extent: [\n        1091940.4568, 7060280.4052,\n        1221347.7977, 7179309.2125\n    ],\n    className:'Tag7',\n    label:'7'\n    }),\n    new ZoomToExtent({\n      extent: [\n        1208073.9457, 7165227.4561,\n        1212845.4349, 7159011.3147\n    ],\n    className:'Tag8',\n    label:'8'\n    }),\n  ]),\n  \n\n  layers: [\n\n    new TileLayer({\n      source: new OSM(),\n    }),\n\n    new VectorLayer({\n      source: new VectorSource({\n        format: new GeoJSON(),\n        url:'./data/Route.geojson',\n      }),\n      style:routeStyle\n    }),\n\n\n    new VectorLayer({\n      source: new VectorSource({\n        format: new GeoJSON(),\n        url:'./data/Zeltplaetze.geojson', \n      }),\n        style:new Style({\n        image:zeltplaetzeStyle\n        })\n      }),\n\n    new VectorLayer({\n      source: new VectorSource({\n        format: new GeoJSON(),\n        url:'./data/Supermarkt.geojson',\n      }),\n      style:new Style({\n        image:supermarktStyle\n      })   \n    }),\n\n    new VectorLayer({\n      source: new VectorSource({\n        format: new GeoJSON(),\n        url:'./data/Baeckereien.geojson',\n      }),\n      style:new Style({\n        image:baeckerStyle\n      })\n    }),    \n  ],\n\n\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst source = new VectorSource();\nconst layer = new VectorLayer({\n  source: source,\n});\nmap.addLayer(layer);\n\nmap.addInteraction(\n  new DragAndDrop({\n    source: source,\n    formatConstructors: [GeoJSON],\n  })\n);\n\nnavigator.geolocation.watchPosition(\n  function (pos) {\n    const coords = [pos.coords.longitude, pos.coords.latitude];\n    const accuracy = circular(coords, pos.coords.accuracy);\n    source.clear(true);\n    source.addFeatures([\n      new Feature(\n        accuracy.transform('EPSG:4326', map.getView().getProjection())\n      ),\n      new Feature(new Point(fromLonLat(coords))),\n    ]);\n  },\n  function (error) {\n    alert(`ERROR: ${error.message}`);\n  },\n  {\n    enableHighAccuracy: true,\n  }\n);\n\nconst locate = document.createElement('div');\nlocate.className = 'ol-control ol-unselectable locate';\nlocate.innerHTML = '<button title=\"Locate me\">◎</button>';\nlocate.addEventListener('click', function () {\n  if (!source.isEmpty()) {\n    map.getView().fit(source.getExtent(), {\n      maxZoom: 18,\n      duration: 500,\n    });\n  }\n});\nmap.addControl(\n  new Control({\n    element: locate,\n  })\n);\n\nsync(map);\n"],"names":["$3d78a3a2062be6dd$export$9099ad97b570f7c","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$727bf6738fdde94d$export$9099ad97b570f7c","$1386f4ed5b3d2a4b$export$9099ad97b570f7c","Disposable","disposed","dispose","disposeInternal","$16831c8b3cdccec7$export$8eda8fbd1364c8a1","a","b","$16831c8b3cdccec7$export$45934da9231b7323","arr","direction","n","length","i","$16831c8b3cdccec7$export$1f4f991ce94838ce","begin","end","tmp","$16831c8b3cdccec7$export$46e35401bc090c62","data","extension","Array","isArray","$16831c8b3cdccec7$export$bcc761834e33d339","arr1","arr2","len1","$20af65f7a38205f7$export$ad8dd69aa6772cd0","$20af65f7a38205f7$export$5c50afa32081505e","$20af65f7a38205f7$export$3850addf0fb4e6a7","$1ed278ebd065aaf6$export$f3c88f5a058bec38","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$1ed278ebd065aaf6$export$97fff7491bd246bd","object","property","$1ed278ebd065aaf6$export$207c30846165e93a","values","push","$1ed278ebd065aaf6$export$988399e568471db1","$c8df8fba8e9f5c07$var$Target","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$c8df8fba8e9f5c07$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$c8df8fba8e9f5c07$export$9099ad97b570f7c","$00d29b6ace6e67fa$export$9099ad97b570f7c","$46e86cc58f3e2235$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$46e86cc58f3e2235$export$d2df825b2d8bc2ba","$46e86cc58f3e2235$export$6dee5fd4fdf600ff","$11407e360abf7d44$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$11407e360abf7d44$var$__extends","changed","getRevision","len","ol_key","$11407e360abf7d44$export$21f63b82add5980c","$c8df8fba8e9f5c07$exports","default","$11407e360abf7d44$export$9099ad97b570f7c","$b1e57fdd8dde574a$export$18e1b4ff5b3c2297","Error","$b1e57fdd8dde574a$var$uidCounter_","$b1e57fdd8dde574a$export$604e9536b9e0488a","obj","ol_uid","String","$3e906ccbcd24be16$export$b902cfd711fa7f06","ObjectEvent","oldValue","$3e906ccbcd24be16$var$__extends","$3e906ccbcd24be16$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$11407e360abf7d44$exports","$9a566a9848e727af$export$9099ad97b570f7c","AssertionError","code","message","split","name","$9a566a9848e727af$var$__extends","$20a6d17585e78d64$export$b8795f4f643ce74f","assertion","errorCode","$9a566a9848e727af$exports","$e5266561d049a513$export$7cf753b6a6534915","styles_1","getZIndex","$e5266561d049a513$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$e5266561d049a513$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$3e906ccbcd24be16$exports","$ed930b4d99744cb5$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$ed930b4d99744cb5$export$af68584dedf5e52c","Math","PI","$ffc5f3d579aca584$var$transformStringDiv","$ed930b4d99744cb5$export$9099ad97b570f7c","$f8271a0713c10a69$var$ua","navigator","userAgent","toLowerCase","$f8271a0713c10a69$export$543c908bf17a24fb","$f8271a0713c10a69$export$bccc8605349feea7","$f8271a0713c10a69$export$f16ffc71033a7aaa","$f8271a0713c10a69$export$1940d5d2b4cf824d","devicePixelRatio","$f8271a0713c10a69$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$f8271a0713c10a69$export$9544418e5c6fedfe","Image","decode","$f8271a0713c10a69$export$700ce540937d8c69","passive","options","defineProperty","window","error","$ffc5f3d579aca584$export$77f8d2fc923b14e3","transform","c","d","e","f","$ffc5f3d579aca584$export$6af9bbf310c9e4bf","coordinate","x","y","$ffc5f3d579aca584$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$ffc5f3d579aca584$export$6e6aac0f60e83c70","mat","det","$ffc5f3d579aca584$export$47bee913e0e80eb4","transformString","join","node","document","createElement","$ecbf3a0b36c7b4ac$export$9099ad97b570f7c","$92fe712ceb0b4cf4$export$9099ad97b570f7c","$d333a56ccd100cfd$export$a7ecbd362d65c1fe","coordinates","extent","$d333a56ccd100cfd$export$dbb3d72606cdc11","$d333a56ccd100cfd$export$2852acc8f8b94686","$d333a56ccd100cfd$export$14e1765886db335a","opt_extent","$d333a56ccd100cfd$export$d6a0542127b96c83","slice","$d333a56ccd100cfd$export$c7d6a927f416dd39","dx","dy","$d333a56ccd100cfd$export$c422a9fcb5f1ee5c","$d333a56ccd100cfd$export$cc70e7e516e4370f","$d333a56ccd100cfd$export$4f55e2d709659e7b","extent1","extent2","$d333a56ccd100cfd$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$d333a56ccd100cfd$export$ea8082d0226d35a5","$d333a56ccd100cfd$export$80741250c74fd4fa","$d333a56ccd100cfd$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$d333a56ccd100cfd$export$4b116deb3079b147","$d333a56ccd100cfd$export$bcc761834e33d339","$d333a56ccd100cfd$export$46e35401bc090c62","$d333a56ccd100cfd$export$8696fee511ea7c7a","min","max","$d333a56ccd100cfd$export$c26f7b9c5adc34b4","callback","val","$d333a56ccd100cfd$export$3932426cd8118930","$d333a56ccd100cfd$export$4e2fc25ce97f3583","$d333a56ccd100cfd$export$35aedeaeee8be6cd","$d333a56ccd100cfd$export$5100f0815ea32995","$d333a56ccd100cfd$export$ab4e37d31d15614d","area","$d333a56ccd100cfd$export$988399e568471db1","$d333a56ccd100cfd$export$3dc3550566517965","$d333a56ccd100cfd$export$e178c8044d3d0a05","$d333a56ccd100cfd$export$339e303bf205caae","$d333a56ccd100cfd$export$38622892ed79bdc7","corner","$d333a56ccd100cfd$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$d333a56ccd100cfd$export$c491031eb9adcc3a","intersection","$d333a56ccd100cfd$export$c3bd2c3b798b0350","$d333a56ccd100cfd$export$76e02248c0889c3e","transformFn","opt_stops","width","height","xs","ys","l","$d333a56ccd100cfd$var$_boundingExtentXYs","$b3eb9bab7e855649$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$11d79372009851c4$export$4b8705656de00c72","$11d79372009851c4$export$4a376e0f60d976ee","cosh","exp","$11d79372009851c4$export$e08236045caaa3e1","log2","log","LOG2E","$11d79372009851c4$export$fd0b1e5ac4df516c","t","$11d79372009851c4$export$8b6706701cd75ea9","$11d79372009851c4$export$11468133b1231643","angleInRadians","$11d79372009851c4$export$4fc80c88d72f096","angleInDegrees","$11d79372009851c4$export$3334706ffb3dccb1","r","$11d79372009851c4$export$45ca8e7f50ccf2e0","$a2e3ad3c6452af0b$export$bb1f4f75177e5528","$a2e3ad3c6452af0b$export$6fd015d56b8406c9","$a2e3ad3c6452af0b$export$64afaa717a0c4932","$a2e3ad3c6452af0b$export$2126dea64bc40b7b","tan","$a2e3ad3c6452af0b$var$EPSG3857Projection","EPSG3857Projection","point","$a2e3ad3c6452af0b$var$__extends","$a2e3ad3c6452af0b$export$850c9b527a5298aa","$a2e3ad3c6452af0b$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$a2e3ad3c6452af0b$export$f361696640082386","atan","$dbcd2854ae42c095$export$6fd015d56b8406c9","$dbcd2854ae42c095$export$af68584dedf5e52c","$dbcd2854ae42c095$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$dbcd2854ae42c095$var$__extends","$dbcd2854ae42c095$export$850c9b527a5298aa","$78eb3a0f9f69d51f$var$cache","$0e52faab48d1c258$var$transforms","$0e52faab48d1c258$export$568ed88074851180","destination","sourceCode","destinationCode","$4d7a66b176a5dddb$export$9099ad97b570f7c","$8adf1144ec7585ad$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$8adf1144ec7585ad$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$31a6ec27eb422148$export$bcc761834e33d339","coordinate1","coordinate2","equals","$31a6ec27eb422148$export$d40e2456b1281660","cosAngle","sinAngle","$31a6ec27eb422148$export$5a0d9577a24f3c5b","projection","worldWidth","worldsAway","$31a6ec27eb422148$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$257c627c1e280f22$export$3fbbaef54e2e9d28","$257c627c1e280f22$export$678028d364072132","$257c627c1e280f22$export$6308908a0016f099","$78eb3a0f9f69d51f$export$568ed88074851180","$257c627c1e280f22$export$7eb84799c931fe91","projectionLike","replace","$257c627c1e280f22$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$257c627c1e280f22$export$747af4f49bde2f53","vertices","$257c627c1e280f22$export$a42db349809b0c24","projections","forEach","$257c627c1e280f22$export$fd4cd3535c7ea97f","$257c627c1e280f22$export$f704437a72056fb8","defaultCode","$257c627c1e280f22$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$0e52faab48d1c258$export$7eb84799c931fe91","$257c627c1e280f22$export$9336879ef6599bf5","$257c627c1e280f22$export$4b169b49e1a4823b","$257c627c1e280f22$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$257c627c1e280f22$var$userProjection","$257c627c1e280f22$export$352fd07bdd93dc1e","$257c627c1e280f22$export$4a182a4d53d7595c","$257c627c1e280f22$export$b5d00774755783fc","destProjection","$257c627c1e280f22$export$a7d473ff80a6a3b","$257c627c1e280f22$export$f87215506b474b9e","$257c627c1e280f22$export$30407c756b1c3707","sourceUnits","userUnits","$38fbdbcddbfb2114$export$92106241c01aa541","opt_dest","dest","j","$38fbdbcddbfb2114$export$d40e2456b1281660","anchor","anchorX","anchorY","deltaX","deltaY","k","$a2e3ad3c6452af0b$exports","PROJECTIONS","$dbcd2854ae42c095$exports","fromEPSG4326","toEPSG4326","$2c40e41d9046f704$var$tmpTransform","$2c40e41d9046f704$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$2c40e41d9046f704$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$d333a56ccd100cfd$export$d1e01ccfd06bf8ee","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$a1ed4c2e9ff299f1$var$GeometryCollection","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$a1ed4c2e9ff299f1$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","$a1ed4c2e9ff299f1$var$cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","$2c40e41d9046f704$exports","clonedGeometries","$a1ed4c2e9ff299f1$export$9099ad97b570f7c","$45178ee5c320f5c0$export$9099ad97b570f7c","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","opt_options","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","$45178ee5c320f5c0$export$534b7b915a5ec453","write","transformed","decimals","power_1","pow","round","$82712b733b1390bc$export$9099ad97b570f7c","$3e9a0d8aed32823b$var$getObject","JSON","parse","$3e9a0d8aed32823b$export$9099ad97b570f7c","JSONFeature","$3e9a0d8aed32823b$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$4d6d0df5f6d473fe$export$9099ad97b570f7c","$fbc4cbc2dbecf2fd$var$SimpleGeometry","SimpleGeometry","layout","$fbc4cbc2dbecf2fd$var$__extends","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$fbc4cbc2dbecf2fd$export$2a65008b73824080","setCoordinates","opt_layout","setLayout","nesting","$fbc4cbc2dbecf2fd$var$getLayoutForStride","$38fbdbcddbfb2114$export$8f869025bba9609b","$38fbdbcddbfb2114$export$41b0d7466cde8385","$fbc4cbc2dbecf2fd$export$36912b83e488cd77","simpleGeometry","$fbc4cbc2dbecf2fd$export$9099ad97b570f7c","$1eeaf5ba3166ef8e$var$assignClosest","offset1","offset2","$1eeaf5ba3166ef8e$export$acf7548d1f0e8581","squaredDelta","$1eeaf5ba3166ef8e$export$ba38095f6bb45df2","ends","$1eeaf5ba3166ef8e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$1eeaf5ba3166ef8e$export$3dd3914e22f9012e","$341fcb0cdbf81912$export$e175f505890ac90f","$341fcb0cdbf81912$export$ab1a51db55485752","coordinatess","opt_ends","jj","$54c380e0fb260ccc$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","$54c380e0fb260ccc$export$ade7859c9eb393ec","simplifiedEnds","$54c380e0fb260ccc$export$383ea8a1f2974dfb","$54c380e0fb260ccc$export$e29de4fdb2175738","$54c380e0fb260ccc$export$1df19a1eb5514c2f","$ff23e8a6e0292000$export$40f3d9558cf6e846","ret","$ebfee1857bdd365b$export$92f32d891164b0ac","opt_coordinates","$ebfee1857bdd365b$export$d82a8a3167f968d","opt_coordinatess","$ebfee1857bdd365b$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$ad7f8cfc102a20b1$export$55be7a9e3fef4787","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$16831c8b3cdccec7$export$26b1c556c0e0f127","$ad7f8cfc102a20b1$export$1a804b04fa5a0253","m","extrapolate","lo","hi","m0","$3c65f17c9f70f766$export$f7b55b637f92fd7","$3c65f17c9f70f766$export$e2ed757909b25f63","wn","$3c65f17c9f70f766$export$51e46a3625992b91","$2b86337dc0cae6ce$export$26f047a5bfac4b1a","coordinatesExtent","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$d333a56ccd100cfd$export$525a75abb91115e3","$2b86337dc0cae6ce$export$717c2c7c46a5bf3d","$2b86337dc0cae6ce$export$f14bd9270666b480","$72877ffc9795efcc$export$7326ac1b36a49776","$7fc9bac1c7e6a765$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","$7fc9bac1c7e6a765$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","$fbc4cbc2dbecf2fd$exports","$8e075789d295b82f$var$MultiLineString","MultiLineString","ends_","lineStrings","$8e075789d295b82f$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$ad7f8cfc102a20b1$export$8958f67b085a89b1","getEnds","getLineString","$7fc9bac1c7e6a765$exports","getLineStrings","getFlatMidpoints","midpoints","$2b86337dc0cae6ce$export$414b603e1c51ecd4","$8e075789d295b82f$export$9099ad97b570f7c","$d78f061ab8e6937f$var$Point","Point","$d78f061ab8e6937f$var$__extends","$341fcb0cdbf81912$export$a53e62528b652807","$d78f061ab8e6937f$export$9099ad97b570f7c","$ec70b77b5d212b39$var$MultiPoint","MultiPoint","$ec70b77b5d212b39$var$__extends","appendPoint","multiPoint","getPoint","$d78f061ab8e6937f$exports","getPoints","points","$ec70b77b5d212b39$export$9099ad97b570f7c","$d21f3a0ce2fde0f1$export$9bf2059fd656d5e9","twiceArea","$d21f3a0ce2fde0f1$export$99cb92d00fd73c87","$2eba2434999e946d$export$9099ad97b570f7c","LinearRing","$2eba2434999e946d$var$__extends","getArea","$7db2c52ec52bd7cf$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$4e5c47cc66c1cbb9$export$c77fe031a1447f2e","$846e7d12e139eeec$export$add61ad31d0a68b4","edge","$846e7d12e139eeec$export$586adaf930d9fdb6","opt_right","right","isClockwise","$846e7d12e139eeec$export$325e57738fd8b321","$846e7d12e139eeec$export$4efd43868de93336","$8577ba96696c7470$var$Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$8577ba96696c7470$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","$2eba2434999e946d$exports","getLinearRings","linearRings","$8577ba96696c7470$export$9099ad97b570f7c","$8577ba96696c7470$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$8577ba96696c7470$export$b50d271c6e9656cd","$8577ba96696c7470$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$8577ba96696c7470$export$5d1798f0e1df079","getRadius","startAngle","$2b01038ad8909ddb$var$MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$2b01038ad8909ddb$var$__extends","appendPolygon","newEndss","multiPolygon","$1eeaf5ba3166ef8e$export$7bbfd5f5d0d7544b","$1eeaf5ba3166ef8e$export$6564f135364e210c","$3c65f17c9f70f766$export$664b9cb38de51b70","$d21f3a0ce2fde0f1$export$3ed76a8ff8a671c","getEndss","getFlatInteriorPoints","$089899774745c253$export$3ed76a8ff8a671c","interiorPoints","$7db2c52ec52bd7cf$export$2bd6b2f516920f59","getInteriorPoints","$ec70b77b5d212b39$exports","$846e7d12e139eeec$export$9ae9bd8fe57776c1","simplifiedEndss","$54c380e0fb260ccc$export$503109e33f5b8344","getPolygon","prevEnds","$8577ba96696c7470$exports","getPolygons","$2b86337dc0cae6ce$export$eae4874c99627698","$341fcb0cdbf81912$export$abe2fb3e7ce9556","lastEnds","$2b01038ad8909ddb$export$9099ad97b570f7c","$90b5c261a4f758a8$var$GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$90b5c261a4f758a8$var$__extends","geoJSONFeature","$90b5c261a4f758a8$var$readGeometry","$e5266561d049a513$exports","geoJSONFeatures","crs","$90b5c261a4f758a8$var$writeGeometry","objects","$3e9a0d8aed32823b$exports","$90b5c261a4f758a8$var$readPointGeometry","$90b5c261a4f758a8$var$readLineStringGeometry","$90b5c261a4f758a8$var$readPolygonGeometry","$90b5c261a4f758a8$var$readMultiPointGeometry","$8e075789d295b82f$exports","$90b5c261a4f758a8$var$readMultiLineStringGeometry","$2b01038ad8909ddb$exports","$90b5c261a4f758a8$var$readMultiPolygonGeometry","map","$a1ed4c2e9ff299f1$exports","$90b5c261a4f758a8$var$readGeometryCollectionGeometry","geoJSON","$90b5c261a4f758a8$var$writePointGeometry","$90b5c261a4f758a8$var$writeLineStringGeometry","rightHanded","$90b5c261a4f758a8$var$writePolygonGeometry","$90b5c261a4f758a8$var$writeMultiPointGeometry","$90b5c261a4f758a8$var$writeMultiLineStringGeometry","$90b5c261a4f758a8$var$writeMultiPolygonGeometry","geometry1","$90b5c261a4f758a8$var$writeGeometryCollectionGeometry","$90b5c261a4f758a8$export$9099ad97b570f7c","$24f1b8341536f1fa$var$HEX_COLOR_RE_","$24f1b8341536f1fa$var$NAMED_COLOR_RE_","$24f1b8341536f1fa$export$9fe004474d6f7f65","color","$24f1b8341536f1fa$export$47bee913e0e80eb4","$24f1b8341536f1fa$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$24f1b8341536f1fa$export$21528ce64591bf2","s","g","exec","hasAlpha","parseInt","substr","$24f1b8341536f1fa$export$2e33abec8aecd572","Number","$24f1b8341536f1fa$var$fromStringInternal_","$24f1b8341536f1fa$export$7266a24c0caa2a8","$6184461a452b3df9$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$6184461a452b3df9$var$getKey","setSize","maxCacheSize","$6184461a452b3df9$export$601b9e2be44c7cb2","$6755f2167754dc52$export$9099ad97b570f7c","$7436508a8164a9fe$export$9099ad97b570f7c","BaseLayer","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$7436508a8164a9fe$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$b9d5daa9625d320c$export$9099ad97b570f7c","$021387f4bbb0e320$export$9099ad97b570f7c","$d78a3f8d945e8ec2$export$16970faadcd3f29b","layerState","viewState","zoom","$d78a3f8d945e8ec2$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$d78a3f8d945e8ec2$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$7436508a8164a9fe$exports","$ba9cc254c2e615b0$var$MapRenderer","MapRenderer","map_","$ba9cc254c2e615b0$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","$d78a3f8d945e8ec2$exports","inView","getWrapX","callback_1","order","i1","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ba9cc254c2e615b0$var$expireIconCache","$ba9cc254c2e615b0$export$9099ad97b570f7c","$7246c595371691cc$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$7246c595371691cc$var$__extends","$35f3eb34fb00a437$var$fontRegEx","RegExp","$35f3eb34fb00a437$var$fontRegExMatchIndex","$35f3eb34fb00a437$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$35f3eb34fb00a437$export$e04cd5eb7e7428c6","$158e6a8754c20e7c$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$158e6a8754c20e7c$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$158e6a8754c20e7c$export$47503d53c08beb29","$33ba1dda25080cc3$export$6ad0413f8fea3c71","$33ba1dda25080cc3$export$70c5a077e5d6beb9","$33ba1dda25080cc3$export$907cf5cff4a8acb1","console","warn","$33ba1dda25080cc3$var$measureFont","measureElement","$33ba1dda25080cc3$var$measureContext","$33ba1dda25080cc3$export$384c0f09c94ed6cc","$33ba1dda25080cc3$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$33ba1dda25080cc3$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$33ba1dda25080cc3$export$a2bf16790cd8f004","metrics","$33ba1dda25080cc3$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$33ba1dda25080cc3$export$4b2ca35321179b27","$33ba1dda25080cc3$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$33ba1dda25080cc3$var$executeLabelInstructions","drawImage","restore","$2d3983d3c236cd0f$var$CompositeMapRenderer","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$35f3eb34fb00a437$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2d3983d3c236cd0f$var$__extends","event_1","$7246c595371691cc$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$158e6a8754c20e7c$export$439ebc2b0f0ec9f4","getDataAtPixel","$ba9cc254c2e615b0$exports","$2d3983d3c236cd0f$export$9099ad97b570f7c","$8c239c70ba402b1b$export$9099ad97b570f7c","$12698a83d5d6619d$var$Property","$12698a83d5d6619d$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$12698a83d5d6619d$var$__extends","$12698a83d5d6619d$var$Collection","Collection","unique_","unique","array_","assertUnique_","updateLength_","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$12698a83d5d6619d$export$9099ad97b570f7c","$78bdbac1eaad4f08$var$Property","$78bdbac1eaad4f08$var$LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$12698a83d5d6619d$exports","setLayers","$78bdbac1eaad4f08$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$78bdbac1eaad4f08$export$9099ad97b570f7c","$5f50aaa354ee43e8$export$9099ad97b570f7c","MapEvent","$5f50aaa354ee43e8$var$__extends","$5cb33e338f86483d$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5cb33e338f86483d$var$__extends","getEventPixel","getCoordinateFromPixel","$5f50aaa354ee43e8$exports","$1701e629f00eed9c$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$eef913c1b3abba70$export$9099ad97b570f7c","$5ce77a9367e71852$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$5ce77a9367e71852$var$__extends","emulateClick_","pointerEvent","newEvent","$5cb33e338f86483d$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$75da2f64972311f8$export$9099ad97b570f7c","$aa15c1da5ede11e4$export$9099ad97b570f7c","$a5b5f21c6babad23$var$PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$a5b5f21c6babad23$export$9099ad97b570f7c","$7c9022c2746a8240$export$9099ad97b570f7c","$79e77b05f0af3af4$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$79e77b05f0af3af4$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$79e77b05f0af3af4$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","$9d93d71f67d1f597$export$9099ad97b570f7c","$e90c70f3094ec23d$export$9099ad97b570f7c","$7a79f648aa728795$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$7a79f648aa728795$export$eaafe0fae18e32b1","$0e1a1b60122676ba$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$0e1a1b60122676ba$var$getSmoothClampedResolution","$0e1a1b60122676ba$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$bfacba8d4304d68f$export$e97ec87d2336bd4e","$bfacba8d4304d68f$export$eaafe0fae18e32b1","$69c984769656a840$export$9fbc3b1d6b2da9ec","$69c984769656a840$export$673b9849e2bc032c","$69c984769656a840$export$1b5c1277e30d397d","$69c984769656a840$export$5523e35ab8ae283a","$013cf7a9f19a8f6c$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$013cf7a9f19a8f6c$var$__extends","resolutionConstraintInfo","$013cf7a9f19a8f6c$export$8b6914b45b83f21f","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$013cf7a9f19a8f6c$export$535fae5a159fbda4","resolutionConstraint","constraint","rotationConstraint","$013cf7a9f19a8f6c$export$9665b691bc2d5ca0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","$013cf7a9f19a8f6c$var$animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$013cf7a9f19a8f6c$export$5d87c27d7d9f380e","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$013cf7a9f19a8f6c$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$0e1a1b60122676ba$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$0e1a1b60122676ba$export$7690ad4e930f454b","theta","opt_tolerance","enableRotation","constrainRotation","$013cf7a9f19a8f6c$export$9099ad97b570f7c","$1584674e6c442cb4$export$c563c2b7121f8771","$1584674e6c442cb4$export$48d31d2725e4d98b","$f45eee633772e0e7$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$78bdbac1eaad4f08$exports","view","$013cf7a9f19a8f6c$exports","$f45eee633772e0e7$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$79e77b05f0af3af4$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","$f45eee633772e0e7$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$5ce77a9367e71852$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","$f45eee633772e0e7$export$9099ad97b570f7c","$52e6a1ab15a4b16d$var$Control","Control","target_","listenerKeys","$52e6a1ab15a4b16d$var$__extends","mapEvent","$52e6a1ab15a4b16d$export$9099ad97b570f7c","$d272f1a7f2d66954$var$Attribution","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$d272f1a7f2d66954$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$158e6a8754c20e7c$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$52e6a1ab15a4b16d$exports","$d272f1a7f2d66954$export$9099ad97b570f7c","$df8a7089a421bf2f$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$df8a7089a421bf2f$var$__extends","resetNorth_","$1022d6743ffba880$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$1022d6743ffba880$var$__extends","zoomByDelta_","currentZoom","newZoom","$52784e62ed79be87$export$9099ad97b570f7c","ZoomToExtent","$52784e62ed79be87$var$__extends","handleZoomToExtent","$3ba5c30aca7182c2$export$b403fbac94228e09","$1022d6743ffba880$exports","zoomOptions","$df8a7089a421bf2f$exports","rotateOptions","attribution","$d272f1a7f2d66954$exports","attributionOptions","$6fe2ef1e7a750c69$export$9099ad97b570f7c","$f26f33305875ffd9$export$63568b31cb17dd4d","$f26f33305875ffd9$export$d2c07614bfd6a817","$f26f33305875ffd9$export$9099ad97b570f7c","Interaction","setActive","$f26f33305875ffd9$var$__extends","active","$247995ce03a38b1e$export$9099ad97b570f7c","DoubleClickZoom","delta_","$247995ce03a38b1e$var$__extends","stopEvent","shiftKey","$f26f33305875ffd9$exports","zoomByDelta","$15b70ec573750fa6$export$e61edea4dfe4ed9b","$15b70ec573750fa6$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$15b70ec573750fa6$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$15b70ec573750fa6$var$isPointerDraggingEvent","$1dd9bb17917c1459$export$8dbdea330bbd6b3c","conditions","pass","$1dd9bb17917c1459$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$1dd9bb17917c1459$export$584a07df7b145c47","hasAttribute","activeElement","$1dd9bb17917c1459$export$363947888fb85da6","$1dd9bb17917c1459$export$a8612972eacfc116","$1dd9bb17917c1459$export$9f5e19851eeaf2c1","$1dd9bb17917c1459$export$1734dfcac3c09b2f","$1dd9bb17917c1459$export$59c8376875f673f8","$1dd9bb17917c1459$export$5bbcce8021828272","tagName","$1dd9bb17917c1459$export$d31d3f3aa38542a8","pointerType","$1dd9bb17917c1459$export$45cd27c0322d6513","isPrimary","$f61551752c4f4f08$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$f61551752c4f4f08$var$__extends","centroid","$15b70ec573750fa6$exports","update","getDistance","getAngle","centerpx","$d813784fb0405083$export$9099ad97b570f7c","DragRotate","lastAngle_","$d813784fb0405083$var$__extends","$46289f3b330b6586$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$46289f3b330b6586$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$a8d898a7bd6fd9e0$var$DragBoxEventType","$a8d898a7bd6fd9e0$export$4d9b552836937ca2","DragBoxEvent","$a8d898a7bd6fd9e0$var$__extends","$a8d898a7bd6fd9e0$export$9099ad97b570f7c","DragBox","box_","$46289f3b330b6586$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$6a3aca92466c0896$export$9099ad97b570f7c","DragZoom","out_","out","$6a3aca92466c0896$var$__extends","factor","$a8d898a7bd6fd9e0$exports","$11a5f739eb17e24b$export$9099ad97b570f7c","$52d09675c125dcf1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$52d09675c125dcf1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$1fae754d3ea6677a$export$9099ad97b570f7c","KeyboardZoom","$1fae754d3ea6677a$var$__extends","charCode","charCodeAt","$e0121ce5936cb4d8$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$cd0092067e7ded9c$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$cd0092067e7ded9c$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$cd0092067e7ded9c$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$a80081c3438ffbf4$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$a80081c3438ffbf4$var$__extends","rotationDelta","touch0","touch1","$e1a7c7fda3fcb5d0$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$e1a7c7fda3fcb5d0$var$__extends","scaleDelta","$b92278933294ec34$export$9099ad97b570f7c","Map1","altShiftDragRotate","$d813784fb0405083$exports","doubleClickZoom","$247995ce03a38b1e$exports","zoomDelta","zoomDuration","dragPan","$f61551752c4f4f08$exports","pinchRotate","$a80081c3438ffbf4$exports","pinchZoom","$e1a7c7fda3fcb5d0$exports","keyboard","$52d09675c125dcf1$exports","$1fae754d3ea6677a$exports","mouseWheelZoom","$cd0092067e7ded9c$exports","shiftDragZoom","$6a3aca92466c0896$exports","$c930ad710d84b305$export$b403fbac94228e09","$b92278933294ec34$var$__extends","$2d3983d3c236cd0f$exports","$f45eee633772e0e7$exports","$37ca435c53f13d4d$exports","t1","t2","r1","e1","a1","h1","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$cd8285e3e84f4d13$export$9099ad97b570f7c","$7736c129cc15e8f7$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$6376afaf3edc9c87$export$55029509b82b2e2b","$09e02ea90a0e8bf3$var$RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$09e02ea90a0e8bf3$var$__extends","getFill","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$09e02ea90a0e8bf3$export$9099ad97b570f7c","$52515b32646d1620$export$9099ad97b570f7c","CircleStyle","$52515b32646d1620$var$__extends","setRadius","$09e02ea90a0e8bf3$exports","$85f396a493b4e027$export$9099ad97b570f7c","Fill","color_","setColor","$5d571ec9414fea2a$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b14009c8ddfadc85$var$Style","Style","geometryFunction_","$b14009c8ddfadc85$var$defaultGeometryFunction","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$b14009c8ddfadc85$var$defaultStyles","$b14009c8ddfadc85$export$33d0043adf82cc14","$52515b32646d1620$exports","$b14009c8ddfadc85$export$9099ad97b570f7c","$8b66177f43228c5f$var$Property","$8b66177f43228c5f$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$8b66177f43228c5f$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","styleFunction","$b14009c8ddfadc85$export$4aaa4bacaec09e94","$0029daffb0840ded$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$0029daffb0840ded$export$c649c04369bd3370","$0029daffb0840ded$export$2513c58bc344fc5c","$0029daffb0840ded$export$84e3c67fd41b07f5","$0029daffb0840ded$export$6cd4b1e0c0e7240c","$0029daffb0840ded$export$9099ad97b570f7c","$0d3e13e6cbc69874$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$1894cda24582da9a$var$CanvasBuilder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$1894cda24582da9a$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$1894cda24582da9a$export$9099ad97b570f7c","$a4795f00dc9530fb$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$a4795f00dc9530fb$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$1894cda24582da9a$exports","$9d273adc89b91f65$var$CanvasLineStringBuilder","CanvasLineStringBuilder","$9d273adc89b91f65$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$9d273adc89b91f65$export$9099ad97b570f7c","$f6fbeb90ec7648f7$var$CanvasPolygonBuilder","CanvasPolygonBuilder","$f6fbeb90ec7648f7$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$f6fbeb90ec7648f7$export$9099ad97b570f7c","$d31bc97d019705a3$export$9099ad97b570f7c","$b17755064c98f4bd$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$b73d5ad30737d390$export$3964e67694391753","$b73d5ad30737d390$var$CanvasTextBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$b73d5ad30737d390$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$b73d5ad30737d390$export$9099ad97b570f7c","$ca6b30c5cbf24996$var$BATCH_CONSTRUCTORS","$f6fbeb90ec7648f7$exports","$a4795f00dc9530fb$exports","$9d273adc89b91f65$exports","$b73d5ad30737d390$exports","$ca6b30c5cbf24996$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$0d7ccc2184bbb6ae$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$0d7ccc2184bbb6ae$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$48340b1070105b4e$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$48340b1070105b4e$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$0d7ccc2184bbb6ae$exports","$af060b2ee005860e$export$9099ad97b570f7c","$f4f82de86f87f3a5$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$4382159e91befef5$var$tmpExtent","$4382159e91befef5$var$p1","$4382159e91befef5$var$p2","$4382159e91befef5$var$p3","$4382159e91befef5$var$p4","$4382159e91befef5$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$4382159e91befef5$var$rtlRegEx","fromCharCode","$4382159e91befef5$var$horizontalTextAlign","align","test","TEXT_ALIGN","$4382159e91befef5$var$Executor","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$33ba1dda25080cc3$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$4382159e91befef5$export$9099ad97b570f7c","$569c5f1125a255d7$var$ORDER","$569c5f1125a255d7$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$569c5f1125a255d7$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$569c5f1125a255d7$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$569c5f1125a255d7$export$9099ad97b570f7c","$a9d040e5a239f750$var$CanvasImmediateRenderer","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$a9d040e5a239f750$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$a9d040e5a239f750$export$9099ad97b570f7c","$f7585e292fcf6dc5$export$9099ad97b570f7c","$a451836ed9fa69af$export$9099ad97b570f7c","$723ec55387d416d6$export$9099ad97b570f7c","ImageBase","$723ec55387d416d6$var$__extends","$fced4221eaca0419$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$fced4221eaca0419$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$723ec55387d416d6$exports","$e98e828d2003bc1a$var$taintedTestContext","$e98e828d2003bc1a$var$IconImage","IconImage","imageState_","tainted_","$e98e828d2003bc1a$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$fced4221eaca0419$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$e98e828d2003bc1a$export$7eb84799c931fe91","$bdd0cbe3d07330ec$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$e98e828d2003bc1a$exports","offset_","offsetOrigin_","offsetOrigin","$bdd0cbe3d07330ec$var$__extends","setAnchor","iconImageSize","$5d8f27e59f1a1823$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$5d8f27e59f1a1823$export$65a5cfeed6fd0c33","feature1","feature2","$5d8f27e59f1a1823$export$f0ea347488340e3d","$5d8f27e59f1a1823$export$522dfd100dd96ba1","$5d8f27e59f1a1823$var$renderGeometry","$5d8f27e59f1a1823$var$renderFeatureInternal","$c153db647ed724b6$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c153db647ed724b6$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$ffc5f3d579aca584$export$e7468c0ae08395df","clipped","transforms","imageSmoothingEnabled","$a9d040e5a239f750$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$bdd0cbe3d07330ec$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$7a6473f1d8aeafa7$export$9fd146a6491490e3","resultFeatures","$7a6473f1d8aeafa7$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","$d333a56ccd100cfd$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","userExtent_1","loadFeatures","$5d8f27e59f1a1823$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$48340b1070105b4e$exports","$c153db647ed724b6$export$9099ad97b570f7c","$072ae9021a014f94$export$9099ad97b570f7c","VectorLayer","$072ae9021a014f94$var$__extends","$c153db647ed724b6$exports","$8b66177f43228c5f$exports","$bb0e1df757854922$var$RBush","opt_maxEntries","rbush_","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$bb0e1df757854922$export$9099ad97b570f7c","$3fa87a5786fdcb68$var$adaptAttributions","attributionLike","$3fa87a5786fdcb68$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","reject","$3fa87a5786fdcb68$var$__extends","getContextOptions","refresh","setAttributions","setState","$c0e76308793a8fd7$export$9099ad97b570f7c","$0d7b3e6e3fdff479$export$8dbdea330bbd6b3c","$2e1cfd628699255e$var$withCredentials","$2e1cfd628699255e$export$52988233cf090939","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$2e1cfd628699255e$export$4355fa6d12274ca5","addFeatures","$2649c727c2ac59b6$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$2649c727c2ac59b6$var$__extends","$2649c727c2ac59b6$var$VectorSource","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$3fa87a5786fdcb68$exports","$2649c727c2ac59b6$export$9099ad97b570f7c","$fc5e688652164909$export$6cfa4eec14fd8155","$fc5e688652164909$export$357eb1b4f03c1402","$fc5e688652164909$export$bca097ad32b98905","$fc5e688652164909$export$2e67c97dae900dc9","$ce37569069058434$export$69c4525ba9274d0a","$3efdcf8d45b58077$export$292766477ad9ab99","$f2eb7787244ea483$export$1c4da3575e598097","$f2eb7787244ea483$export$c9ada32f20c3c37b","$f2eb7787244ea483$export$969de9d6b09f6847","$f2eb7787244ea483$export$46e35401bc090c62","$c35f4eb6c830a3e4$var$DragAndDropEventType","$c35f4eb6c830a3e4$export$d35fc0a94a459ce7","DragAndDropEvent","file","opt_projection","$c35f4eb6c830a3e4$var$__extends","$c35f4eb6c830a3e4$var$DragAndDrop","DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","$c35f4eb6c830a3e4$export$9099ad97b570f7c","$10604cd8390cbdeb$var$objectProto","$10604cd8390cbdeb$var$objToString","$10604cd8390cbdeb$var$fnToString","Function","$10604cd8390cbdeb$var$objCtorString","$10604cd8390cbdeb$var$STRIP_COMMENTS","$10604cd8390cbdeb$var$ARGUMENT_NAMES","$10604cd8390cbdeb$var$NAME_PATTERN","$10604cd8390cbdeb$var$Services","getPrototypeOf","isHostObject","isDefined","isIterable","Symbol","iterator","isPromise","isPlainObject","isObjectLike","proto","constructor","Ctor","isObject","isError","isNumber","isDate","isFunction","isSyncFunction","isAsyncFunction","isBoolean","isString","isRegExp","walk","path","defaultValue","oPath","isValidPath","parameterNames","fnStr","pick","predicate","ignore","res","includes","functionsOf","asyncOnly","functionNames","$3a3eff834bc3e0b0$export$7eb84799c931fe91","$10604cd8390cbdeb$exports","zipped","$3a3eff834bc3e0b0$var$enc","encodeURIComponent","$3a3eff834bc3e0b0$var$serializers","string","str","number","num","boolean","bool","date","toISOString","$47abdb80020d2714$export$7eb84799c931fe91","$47abdb80020d2714$var$dec","decodeURIComponent","$47abdb80020d2714$var$deserializers","getTime","config","serialize","deserialize","$3efdcf8d45b58077$var$Schema","fields","prefix","_","$3efdcf8d45b58077$require$Field","_prefix","_fields","getPrefixed","forEachKey","getDefault","conflicts","other","thisPrefixedKeys","prefixed","$ce37569069058434$var$Store","_values","_defaults","_providers","_callback","_callbackTimer","_scheduleCallback","_debouncedCallback","_updateTimer","_debouncedUpdate","newValues","providers","provider","schema","deserialized","serializedDefault","unregister","removedProvider","defaults","register","$ce37569069058434$require$Schema","_initializeProvider","serializedValue","deserializedValue","deserializedDefault","serialized","serializer","$691f7c59879b14bd$export$e4ab0279f1988ab8","$691f7c59879b14bd$export$2e67c97dae900dc9","$fc5e688652164909$var$store","$fc5e688652164909$var$reset","$fc5e688652164909$var$update","$fc5e688652164909$require$Store","location","hash","nonDefaults","history","pushState","$e3c5402baf428451$var$toPrecision","precision","$e3c5402baf428451$export$9099ad97b570f7c","viewport","clientWidth","LN2","hashHandler","$fc5e688652164909$exports","onMoveEnd","$353a86b6785d23cf$export$9099ad97b570f7c","$289d8a06dd383ff7$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$289d8a06dd383ff7$var$__extends","getPreload","getUseInterimTilesOnError","$755de0abe16276c4$var$TileRange","TileRange","containsTileRange","getHeight","$755de0abe16276c4$export$ea8082d0226d35a5","$755de0abe16276c4$export$9099ad97b570f7c","$9056ddaf99896c0e$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$9056ddaf99896c0e$var$__extends","isDrawableTile","tileState","getTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","endTransition","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$9056ddaf99896c0e$export$9099ad97b570f7c","$e61f98c73384e953$export$9099ad97b570f7c","TileLayer","$e61f98c73384e953$var$__extends","$9056ddaf99896c0e$exports","$289d8a06dd383ff7$exports","$42eaa0851eb221cf$export$9099ad97b570f7c","Tile","interimTile","transition_","transitionStarts_","$42eaa0851eb221cf$var$__extends","release","refreshInterimChain","getTileCoord","$17444c5007a5df29$export$9099ad97b570f7c","ImageTile","tileLoadFunction","tileLoadFunction_","$17444c5007a5df29$var$__extends","naturalWidth","naturalHeight","$42eaa0851eb221cf$exports","$4e3d7af6ddc0a7bb$var$brokenDiagonalRendering_","$7885574070ba36b3$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$1a48f53661f04756$export$5f986e3acaff8610","msImageSmoothingEnabled","$4e3d7af6ddc0a7bb$var$drawTestTriangle","v1","v2","$4e3d7af6ddc0a7bb$var$verifyBrokenDiagonalRendering","$4e3d7af6ddc0a7bb$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$4e3d7af6ddc0a7bb$export$792a797b69be0d58","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$11d79372009851c4$export$27dc5719ceda6735","$4e3d7af6ddc0a7bb$var$isBrokenDiagonalRendering","ud","vd","steps","$ad06dd403e0a8513$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$4e3d7af6ddc0a7bb$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$ad06dd403e0a8513$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$bf88e629b6ee6163$var$LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$bf88e629b6ee6163$export$9099ad97b570f7c","$153c3e950abfd740$export$ea8082d0226d35a5","opt_tileCoord","$153c3e950abfd740$export$1039fb0288fd71e3","$153c3e950abfd740$export$a0f0ccbe5bbc0789","$61823e7907e95ef6$export$9099ad97b570f7c","TileCache","$61823e7907e95ef6$var$__extends","pruneExceptNewestZ","$153c3e950abfd740$export$5208a752d34424e5","$4bb75659bb3462f8$export$9099ad97b570f7c","$4957c1686d037101$var$tmpTileCoord","$4957c1686d037101$var$TileGrid","TileGrid","opt_strict","compare","every","currentVal","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$4957c1686d037101$export$9099ad97b570f7c","$1770d80474e42ee1$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$1770d80474e42ee1$var$resolutionsFromExtent","$1770d80474e42ee1$export$57c49ef1657592d4","$1770d80474e42ee1$export$9666e825b22d806d","$1770d80474e42ee1$export$6dfef52f91d4f582","opt_maxResolution","half","$5b2b9f9d853aaab8$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$61823e7907e95ef6$exports","tmpSize","tileOptions","$5b2b9f9d853aaab8$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","$1770d80474e42ee1$export$5a0d9577a24f3c5b","$153c3e950abfd740$export$b46b80619528d4e5","$5b2b9f9d853aaab8$export$8434c8db61edbf9d","TileSourceEvent","$5b2b9f9d853aaab8$export$9099ad97b570f7c","$309456a17bc9d7d9$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$309456a17bc9d7d9$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$153c3e950abfd740$export$4639c7f2947f4458","$309456a17bc9d7d9$export$c6a04e0c49b28953","$ed8b1ee91d3b1512$var$UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$ed8b1ee91d3b1512$var$__extends","getTileLoadFunction","getTileUrlFunction","getUrls","$5b2b9f9d853aaab8$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$309456a17bc9d7d9$export$47abe479fba0e55d","$ed8b1ee91d3b1512$export$9099ad97b570f7c","$a00efaa4b8159fae$var$TileImage","TileImage","$a00efaa4b8159fae$var$defaultTileLoadFunction","tileClass","$17444c5007a5df29$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$a00efaa4b8159fae$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$ad06dd403e0a8513$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$ed8b1ee91d3b1512$exports","imageTile","$a00efaa4b8159fae$export$9099ad97b570f7c","$5e7113aef66904ec$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$1770d80474e42ee1$export$5731532c605ee56","$5e7113aef66904ec$var$__extends","$a00efaa4b8159fae$exports","$0ba296154ef38f2d$export$bd9c1867755cf54e","$0ba296154ef38f2d$export$9099ad97b570f7c","OSM","$0ba296154ef38f2d$var$__extends","$5e7113aef66904ec$exports","$bf17604be0b0695a$export$9099ad97b570f7c","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","renderOnMouseOut","placeholder","undefinedHTML","placeholder_","renderOnMouseOut_","renderedHTML_","mapProjection_","$bf17604be0b0695a$var$__extends","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","$c02c287cd7235185$var$mousePositionControl","$bf17604be0b0695a$exports","opt_fractionDigits","toFixed","$31a6ec27eb422148$export$a5b158389611e45d","$31a6ec27eb422148$export$65a78249c9b30a6a","$c02c287cd7235185$var$zeltplaetzeStyle","$c02c287cd7235185$var$supermarktStyle","$c02c287cd7235185$var$baeckerStyle","$c02c287cd7235185$var$routeStyle","$c02c287cd7235185$var$map","$b92278933294ec34$exports","$52784e62ed79be87$exports","$e61f98c73384e953$exports","$0ba296154ef38f2d$exports","$072ae9021a014f94$exports","$2649c727c2ac59b6$exports","$90b5c261a4f758a8$exports","$c02c287cd7235185$var$source","$c02c287cd7235185$var$layer","$c35f4eb6c830a3e4$exports","geolocation","watchPosition","longitude","latitude","accuracy","circular","alert","enableHighAccuracy","$c02c287cd7235185$var$locate"],"version":3,"file":"index.970c9feb.js.map"}